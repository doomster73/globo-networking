name: 'Terraform'

on: push

env:
  TF_LOG: INFO
  TF_INPUT: false

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is 
    # ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the preferred version of Terraform CLI 
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    # Configure Terraform CLI to use the API token from GitHub Secrets
    - name: Configure Terraform credentials
      run: |
        mkdir -p $HOME/.terraform.d
        cat > $HOME/.terraform.d/credentials.tfrc.json << EOF
        {
          "credentials": {
            "app.terraform.io": {
              "token": "${{ secrets.TF_API_TOKEN }}"
            }
          }
        }
        EOF

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      id: init
      run: terraform init

    # Run a terraform fmt for push
    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    # Run a terraform validate
    # Run even if formatting fails
    - name: Terraform Validate
      id: validate
      if: (success() || failure())
      run: terraform validate
